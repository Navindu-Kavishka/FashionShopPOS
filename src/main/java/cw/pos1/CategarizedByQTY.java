/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package cw.pos1;

import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author King
 */
public class CategarizedByQTY extends javax.swing.JFrame {

    /**
     * Creates new form CategarizedByQTY
     */
    public CategarizedByQTY() {
        initComponents();
        setLocationRelativeTo(this);
        
        loadData();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel = new javax.swing.JLabel();
        pnlCBQ = new javax.swing.JPanel();
        btnBack = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblCBQ = new javax.swing.JTable();

        jLabel.setFont(new java.awt.Font("Segoe UI Emoji", 1, 14)); // NOI18N
        jLabel.setForeground(new java.awt.Color(255, 0, 0));

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Categarized By QTY");

        pnlCBQ.setBackground(new java.awt.Color(204, 255, 255));

        btnBack.setBackground(new java.awt.Color(255, 51, 51));
        btnBack.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        btnBack.setForeground(new java.awt.Color(255, 255, 255));
        btnBack.setText("Back");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        tblCBQ.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Size", "QTY", "Amount"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Integer.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblCBQ.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(tblCBQ);
        if (tblCBQ.getColumnModel().getColumnCount() > 0) {
            tblCBQ.getColumnModel().getColumn(0).setResizable(false);
            tblCBQ.getColumnModel().getColumn(1).setResizable(false);
            tblCBQ.getColumnModel().getColumn(2).setResizable(false);
        }

        javax.swing.GroupLayout pnlCBQLayout = new javax.swing.GroupLayout(pnlCBQ);
        pnlCBQ.setLayout(pnlCBQLayout);
        pnlCBQLayout.setHorizontalGroup(
            pnlCBQLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlCBQLayout.createSequentialGroup()
                .addComponent(btnBack, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(pnlCBQLayout.createSequentialGroup()
                .addGap(72, 72, 72)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(105, Short.MAX_VALUE))
        );
        pnlCBQLayout.setVerticalGroup(
            pnlCBQLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlCBQLayout.createSequentialGroup()
                .addComponent(btnBack, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(34, 34, 34)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 296, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(104, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnlCBQ, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnlCBQ, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        ViewReports rep = new ViewReports();
        rep.setVisible(true);
        this.dispose();// TODO add your handling code here:
    }//GEN-LAST:event_btnBackActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CategarizedByQTY.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CategarizedByQTY.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CategarizedByQTY.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CategarizedByQTY.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new CategarizedByQTY().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBack;
    private javax.swing.JLabel jLabel;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JPanel pnlCBQ;
    private javax.swing.JTable tblCBQ;
    // End of variables declaration//GEN-END:variables

    private void loadData() {
        
        if (mainMenu.OrderList.size() > 0) {
            int xsCount = 0;
            int sCount = 0;
            int  mCount = 0;
            int lCount = 0;
            int xlCount = 0;
            int xxlCount = 0;
            double xsAmount = 0;
            double sAmount = 0;
            double mAmount = 0;
            double lAmount = 0;
            double xlAmount = 0;
            double xxlAmount = 0;

            for (int i = 0; i < mainMenu.OrderList.size(); i++) {
                Order ord = mainMenu.OrderList.get(i);
                switch (ord.getSize()) {
                    case "XS":
                        xsCount += ord.getQty();
                        xsAmount += ord.getTamount();
                        break;
                    case "S":
                        sCount += ord.getQty();
                        sAmount += ord.getTamount();
                        break;
                    case "M":
                        mCount += ord.getQty();
                        mAmount += ord.getTamount();
                        break;
                    case "L":
                        lCount += ord.getQty();
                        lAmount += ord.getTamount();
                        break;
                    case "XL":
                        xlCount += ord.getQty();
                        xlAmount += ord.getTamount();
                        break;
                    case "XXL":
                        xxlCount += ord.getQty();
                        xxlAmount += ord.getTamount();
                        break;

                }

            }
            String sizeType[] = {"XS", "S", "M", "L", "XL", "XXL"};
            int[] tempQty = {xsCount, sCount, mCount, lCount, xlCount, xxlCount};
            double[] totalAmount = {xsAmount, sAmount, mAmount, lAmount, xlAmount, xxlAmount};

            for (int j = 0; j < 10; j++) {
                for (int i = 0; i < tempQty.length - 1; i++) {
                    if (tempQty[i + 1] > tempQty[i]) {
                        int t = tempQty[i];
                        tempQty[i] = tempQty[i + 1];
                        tempQty[i + 1] = t;

                        double u = totalAmount[i];
                        totalAmount[i] = totalAmount[i + 1];
                        totalAmount[i + 1] = u;

                        String v = sizeType[i];
                        sizeType[i] = sizeType[i + 1];
                        sizeType[i + 1] = v;
                    }
                }
            }
            DefaultTableModel dtm =(DefaultTableModel)tblCBQ.getModel();
            dtm.setRowCount(0);
            DefaultTableCellRenderer dtcr = new DefaultTableCellRenderer();
            dtcr.setHorizontalAlignment(jLabel.CENTER);

            tblCBQ.getColumnModel().getColumn(0).setCellRenderer(dtcr);
            tblCBQ.getColumnModel().getColumn(1).setCellRenderer(dtcr);
            tblCBQ.getColumnModel().getColumn(2).setCellRenderer(dtcr);
            
            for (int i = 0; i < sizeType.length; i++) {
                dtm.addRow(new String[]{sizeType[i],String.valueOf(tempQty[i]),String.format("%.2f",totalAmount[i])} );
                
            }

        }else{
            JOptionPane.showMessageDialog(this, "Information not Found...");
        }

    }
    
    
}
